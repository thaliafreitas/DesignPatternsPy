class BrazilianSocketInterface:
   def voltage(self): pass

   def live(self): pass
   def neutral(self): pass
   def earth(self): pass

# Adaptee
class Socket(BrazilianSocketInterface):

  def voltage(self):
      return 220
  def live(self):
      return 1
   
  def neutral(self):
      return -1
   
  def earth(self):
      return 0

# Target interface
class BRASocketInterface:
  def voltage(self): pass
  def live(self): pass
  def neutral(self): pass

# The Adapter
class Adapter(BRASocketInterface):
  __socket = None
  def __init__(self, socket):
      self.__socket = socket
   
  def voltage(self):
      return 110
   
  def live(self):
      return self.__socket.live()
   
  def neutral(self):
      return self.__socket.neutral()

# Client
class ElectricMicrowave:
   __power = None

   def __init__(self, power):
	    self.__power = power
   
   def heatUp(self):
      if self.__power.voltage() > 110:
          print ("OverheatUped Microwave!")
      else:
          if self.__power.live() == 1 and \
            self.__power.neutral() == -1:
            print ("Food is coming!")
          else:
            print ("No power.")

def main():
   # Plug in
   socket = Socket()
   adapter = Adapter(socket)
   microwave = ElectricMicrowave(adapter)
	
   # Make coffee
   microwave.heatUp()

   return 0
	
if __name__ == "__main__":
   main()
